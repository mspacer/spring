plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.2'
    id 'io.freefair.lombok' version '6.3.0'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

apply from: 'version.gradle'

apply plugin: 'io.spring.dependency-management'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()

    flatDir {
        dirs rootDir.absolutePath + File.separator + 'lib'
    }
}

configurations {
    querydsl.extendsFrom annotationProcessor, implementation, compilyOnly, runtimeOnly
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter')

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.apache.tomcat.embed:tomcat-embed-jasper')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.data:spring-data-envers')
    implementation 'org.postgresql:postgresql:42.3.1'
    implementation 'com.querydsl:querydsl-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation "org.springdoc:springdoc-openapi-ui:${versions.springdoc}"

    implementation 'org.liquibase:liquibase-core'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'ibs.common:dto:1.0.0'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.1'

    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'

    annotationProcessor 'com.querydsl:querydsl-apt'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

querydsl {
    jpa = true
    library = "com.querydsl:querydsl-apt:${versions.querydsl}"
    querydslSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main"
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

test {
    useJUnitPlatform()
}
